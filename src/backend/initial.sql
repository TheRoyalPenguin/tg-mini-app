CREATE TABLE IF NOT EXISTS "__EFMigrationsHistory" (
    "MigrationId" character varying(150) NOT NULL,
    "ProductVersion" character varying(32) NOT NULL,
    CONSTRAINT "PK___EFMigrationsHistory" PRIMARY KEY ("MigrationId")
);

START TRANSACTION;
CREATE TABLE courses (
    course_id integer GENERATED BY DEFAULT AS IDENTITY,
    course_title character varying(100) NOT NULL,
    course_description text NOT NULL,
    CONSTRAINT courses_pkey PRIMARY KEY (course_id)
);

CREATE TABLE roles (
    "Id" integer GENERATED BY DEFAULT AS IDENTITY,
    role_name character varying(50) NOT NULL,
    role_level integer NOT NULL,
    CONSTRAINT role_pkey PRIMARY KEY ("Id")
);

CREATE TABLE modules (
    module_id integer GENERATED BY DEFAULT AS IDENTITY,
    module_title character varying(100) NOT NULL,
    module_description text NOT NULL,
    course_id integer NOT NULL,
    CONSTRAINT modules_pkey PRIMARY KEY (module_id),
    CONSTRAINT "FK_modules_courses_course_id" FOREIGN KEY (course_id) REFERENCES courses (course_id) ON DELETE CASCADE
);

CREATE TABLE users (
    user_id integer GENERATED BY DEFAULT AS IDENTITY,
    user_telegram_id bigint NOT NULL,
    user_first_name character varying(100) NOT NULL,
    user_last_name character varying(100) NOT NULL,
    user_patronymic character varying(100) NOT NULL,
    user_phone_number character varying(20) NOT NULL,
    is_banned boolean NOT NULL DEFAULT FALSE,
    role_id integer NOT NULL DEFAULT 0,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT "FK_users_roles_role_id" FOREIGN KEY (role_id) REFERENCES roles ("Id") ON DELETE CASCADE
);

CREATE TABLE lessons (
    lesson_id integer GENERATED BY DEFAULT AS IDENTITY,
    lesson_title character varying(100) NOT NULL,
    lesson_description text NOT NULL,
    module_id integer NOT NULL,
    CONSTRAINT lessons_pk PRIMARY KEY (lesson_id),
    CONSTRAINT "FK_lessons_modules_module_id" FOREIGN KEY (module_id) REFERENCES modules (module_id) ON DELETE CASCADE
);

CREATE TABLE enrollments (
    enrollment_id integer GENERATED BY DEFAULT AS IDENTITY,
    is_course_completed boolean NOT NULL DEFAULT FALSE,
    enrollment_date date NOT NULL DEFAULT (CURRENT_DATE),
    course_completion_date date NOT NULL,
    user_id integer NOT NULL,
    course_id integer NOT NULL,
    CONSTRAINT enrollments_pkey PRIMARY KEY (enrollment_id),
    CONSTRAINT "FK_enrollments_courses_course_id" FOREIGN KEY (course_id) REFERENCES courses (course_id) ON DELETE CASCADE,
    CONSTRAINT "FK_enrollments_users_user_id" FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE module_accesses (
    module_access_id integer GENERATED BY DEFAULT AS IDENTITY,
    is_module_completed boolean NOT NULL DEFAULT FALSE,
    module_completion_date date NOT NULL,
    "UserId" integer NOT NULL,
    "ModuleId" integer NOT NULL,
    CONSTRAINT module_accesses_pkey PRIMARY KEY (module_access_id),
    CONSTRAINT "FK_module_accesses_modules_ModuleId" FOREIGN KEY ("ModuleId") REFERENCES modules (module_id) ON DELETE CASCADE,
    CONSTRAINT "FK_module_accesses_users_UserId" FOREIGN KEY ("UserId") REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE lessons_progress (
    lesson_progress_id integer GENERATED BY DEFAULT AS IDENTITY,
    is_lesson_completed boolean NOT NULL DEFAULT FALSE,
    lesson_last_activity_date date NOT NULL,
    user_id integer NOT NULL,
    lesson_id integer NOT NULL,
    CONSTRAINT lessons_progress_pkey PRIMARY KEY (lesson_progress_id),
    CONSTRAINT "FK_lessons_progress_lessons_lesson_id" FOREIGN KEY (lesson_id) REFERENCES lessons (lesson_id) ON DELETE CASCADE,
    CONSTRAINT "FK_lessons_progress_users_user_id" FOREIGN KEY (user_id) REFERENCES users (user_id) ON DELETE CASCADE
);

CREATE TABLE resources (
    resource_id integer GENERATED BY DEFAULT AS IDENTITY,
    resource_title character varying(100) NOT NULL,
    lesson_id integer NOT NULL,
    CONSTRAINT resource_pkey PRIMARY KEY (resource_id),
    CONSTRAINT "FK_resources_lessons_lesson_id" FOREIGN KEY (lesson_id) REFERENCES lessons (lesson_id) ON DELETE CASCADE
);

CREATE INDEX "IX_enrollments_course_id" ON enrollments (course_id);

CREATE UNIQUE INDEX "IX_enrollments_user_id_course_id" ON enrollments (user_id, course_id);

CREATE INDEX "IX_lessons_module_id" ON lessons (module_id);

CREATE INDEX "IX_lessons_progress_lesson_id" ON lessons_progress (lesson_id);

CREATE UNIQUE INDEX "IX_lessons_progress_user_id_lesson_id" ON lessons_progress (user_id, lesson_id);

CREATE UNIQUE INDEX "IX_module_accesses_module_access_id_ModuleId" ON module_accesses (module_access_id, "ModuleId");

CREATE INDEX "IX_module_accesses_ModuleId" ON module_accesses ("ModuleId");

CREATE INDEX "IX_module_accesses_UserId" ON module_accesses ("UserId");

CREATE INDEX "IX_modules_course_id" ON modules (course_id);

CREATE INDEX "IX_resources_lesson_id" ON resources (lesson_id);

CREATE UNIQUE INDEX "IX_roles_role_level" ON roles (role_level);

CREATE UNIQUE INDEX "IX_roles_role_name" ON roles (role_name);

CREATE INDEX "IX_users_role_id" ON users (role_id);

CREATE UNIQUE INDEX "IX_users_user_phone_number" ON users (user_phone_number);

CREATE UNIQUE INDEX "IX_users_user_telegram_id" ON users (user_telegram_id);

INSERT INTO "__EFMigrationsHistory" ("MigrationId", "ProductVersion")
VALUES ('20250411201656_Initial', '9.0.4');

COMMIT;

