services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - backend
      
  admin-frontend:
    build:
      context: ./admin-frontend
      dockerfile: Dockerfile
    ports:
      - "3001:3000" 
    depends_on:
      - backend 

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    environment:
      - ASPNETCORE_URLS=http://+:8080
      - ASPNETCORE_ENVIRONMENT=Development
    depends_on:
      - postgres
      - minio
      - redis
  
  postgres:
    image: postgres:15
    container_name: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: barsdb
    volumes:
      - db_data:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: bars
      MINIO_ROOT_PASSWORD: hackaton
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data
      
  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
  
  bot:
    container_name: bot
    build:
      context: ./tg-bot
      dockerfile: Bot/Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - backend
    environment:
      - BACKEND_URL=http://backend:8080

  seq:
    image: datalust/seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - "5341:80"

volumes:
  db_data:
  minio_data:
  redis_data:
